@* ----------------------------------------------------------------------------------
    File: DevTools.razor
    Path: src/Web/EastSeat.ResourceIdea.Web/Components/Pages/Backend/DevTools.razor
    Description: Backend development tools for Developer/Support users
   ---------------------------------------------------------------------------------- *@

@page "/backend/dev-tools"
@layout BackendLayout
@attribute [BackendAccess]

@using EastSeat.ResourceIdea.Web.Authorization
@using EastSeat.ResourceIdea.Web.Components.Base
@using EastSeat.ResourceIdea.Application.Features.Employees.Contracts
@using EastSeat.ResourceIdea.Domain.Tenants.ValueObjects
@using EastSeat.ResourceIdea.DataStore.Identity.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

@inherits ResourceIdeaComponentBase

<ResourceIdeaPageTitle>Development Tools</ResourceIdeaPageTitle>

<div class="backend-dev-tools">
    <div class="page-header">
        <h1><i class="fas fa-tools"></i> Development Tools</h1>
        <p class="lead">Administrative tools for development and testing purposes</p>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-user-plus"></i> Create Test User</h5>
                    <p class="text-muted mb-0">Create a test user with custom credentials for development purposes</p>
                </div>
                <div class="card-body">
                    <EditForm Model="createUserModel" OnValidSubmit="CreateTestUser">
                        <DataAnnotationsValidator />
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">First Name <span class="text-danger">*</span></label>
                                    <InputText @bind-Value="createUserModel.FirstName" class="form-control" />
                                    <ValidationMessage For="() => createUserModel.FirstName" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Last Name <span class="text-danger">*</span></label>
                                    <InputText @bind-Value="createUserModel.LastName" class="form-control" />
                                    <ValidationMessage For="() => createUserModel.LastName" />
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Email Address <span class="text-danger">*</span></label>
                            <InputText @bind-Value="createUserModel.Email" class="form-control" type="email" />
                            <ValidationMessage For="() => createUserModel.Email" />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Password <span class="text-danger">*</span></label>
                            <InputText type="password" @bind-Value="createUserModel.Password" class="form-control" />
                            <ValidationMessage For="() => createUserModel.Password" />
                            <div class="form-text">Minimum 6 characters with at least one uppercase, lowercase, and digit.</div>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Tenant ID <span class="text-danger">*</span></label>
                            <InputText @bind-Value="createUserModel.TenantIdValue" class="form-control" placeholder="e.g., tenant-123" />
                            <ValidationMessage For="() => createUserModel.TenantIdValue" />
                            <div class="form-text">Unique identifier for the tenant/organization.</div>
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <button type="submit" class="btn btn-primary" disabled="@IsLoading">
                                @if (IsLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                <i class="fas fa-user-plus me-1"></i> Create Test User
                            </button>
                            <button type="button" class="btn btn-outline-secondary" @onclick="ResetForm">
                                <i class="fas fa-undo me-1"></i> Reset Form
                            </button>
                        </div>
                    </EditForm>
                    
                    @if (HasError && !string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @ErrorMessage
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(SuccessMessage))
                    {
                        <div class="alert alert-success mt-3" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @SuccessMessage
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <h5><i class="fas fa-users"></i> Recent Test Users</h5>
                        <p class="text-muted mb-0">Quick view of recently created test users</p>
                    </div>
                    <button class="btn btn-outline-primary btn-sm" @onclick="LoadUsers">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                </div>
                <div class="card-body">
                    @if (IsLoadingUsers)
                    {
                        <div class="text-center py-3">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading users...</span>
                            </div>
                            <span class="ms-2">Loading users...</span>
                        </div>
                    }
                    else if (users?.Any() == true)
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-striped">
                                <thead>
                                    <tr>
                                        <th>Email</th>
                                        <th>Name</th>
                                        <th>Tenant ID</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in users.Take(10))
                                    {
                                        <tr>
                                            <td>@user.Email</td>
                                            <td>@user.FirstName @user.LastName</td>
                                            <td><code>@user.TenantId.Value</code></td>
                                            <td>
                                                <span class="badge @(user.EmailConfirmed ? "bg-success" : "bg-warning")">
                                                    @(user.EmailConfirmed ? "Confirmed" : "Pending")
                                                </span>
                                            </td>
                                            <td>
                                                <a href="/backend/users" class="btn btn-outline-primary btn-sm">
                                                    <i class="fas fa-external-link-alt"></i> Manage
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="text-center mt-3">
                            <a href="/backend/users" class="btn btn-outline-primary">
                                <i class="fas fa-users"></i> View All Users
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-users fa-2x text-muted mb-2"></i>
                            <p class="text-muted mb-0">No users found.</p>
                            <a href="#" @onclick="LoadUsers" class="btn btn-link">Click to load users</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>