@page "/logout"
@inherits ResourceIdeaComponentBase
@using EastSeat.ResourceIdea.Application.Features.Authentication.Commands
@using EastSeat.ResourceIdea.Web.Components.Base
@using MediatR
@inject IMediator Mediator

<PageTitle>Logout - ResourceIdea</PageTitle>

<link href="~/css/components/logout.css" rel="stylesheet" />

<div class="logout-container">
    <div class="logout-card">
        @if (IsLoading)
        {
            <div class="logout-spinner">
                <i class="fas fa-spinner fa-spin fa-3x"></i>
            </div>
            <h2 class="logout-title">Signing out...</h2>
            <p class="logout-message">Please wait while we sign you out.</p>
        }
        else if (HasError)
        {
            <div class="logout-icon logout-error">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <h2 class="logout-title">Logout Error</h2>
            <p class="logout-message">@ErrorMessage</p>
        }
        else
        {
            <div class="logout-icon logout-success">
                <i class="fas fa-check-circle"></i>
            </div>
            <h2 class="logout-title">Signed out successfully</h2>
            <p class="logout-message">You have been successfully signed out.</p>
        }
    </div>
</div>

@code {
    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ExecuteAsync(async () =>
        {
            var command = new LogoutCommand
            {
                ReturnUrl = ReturnUrl
            };

            var result = await Mediator.Send(command);

            if (result.IsSuccess && result.Content.HasValue && result.Content.Value.IsSuccess)
            {
                // Wait a moment to show the success message
                await Task.Delay(1500);
                
                // Navigate to the redirect URL or home page
                var redirectUrl = result.Content.Value.RedirectUrl ?? "/";
                Navigation.NavigateTo(redirectUrl, true);
            }
            else if (result.Content.HasValue)
            {
                // Logout failed with a specific error message
                SetError(result.Content.Value.ErrorMessage ?? "Logout failed. Please try again.");
            }
            else
            {
                // Generic failure
                SetError("An error occurred during sign out. Please try again.");
            }
        }, "Processing logout");
    }
}
