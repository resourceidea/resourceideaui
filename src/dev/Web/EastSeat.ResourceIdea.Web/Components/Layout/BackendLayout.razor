@* ----------------------------------------------------------------------------------
    File: BackendLayout.razor
    Path: src/Web/EastSeat.ResourceIdea.Web/Components/Layout/BackendLayout.razor
    Description: Layout for backend users (Developer/Support) with backend-specific navigation
   ---------------------------------------------------------------------------------- *@

@inherits LayoutComponentBase
@inject NotificationService NotificationService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="app-container">
    <!-- Backend Sidebar Navigation -->
    <BackendSidebarNavigation />

    <!-- Main Content Area -->
    <div class="main-content">
        <!-- Top Header with User Profile -->
        <header class="top-header backend-header">
            <div class="header-content">
                <div class="header-left">
                    <div class="backend-indicator">
                        <i class="fas fa-tools"></i>
                        <span class="backend-label">Backend Access</span>
                    </div>
                </div>
                <div class="header-right">
                    <div class="user-profile-dropdown">
                        <button class="user-profile-btn" type="button" data-bs-toggle="dropdown">
                            <i class="fas fa-user-circle"></i>
                            <span class="user-name">@currentUserName</span>
                            <span class="user-role">(@currentUserRole)</span>
                            <i class="fas fa-chevron-down"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" href="/backend/profile"><i class="fas fa-user"></i> Profile</a></li>
                            <li><a class="dropdown-item" href="/backend/settings"><i class="fas fa-cog"></i> Settings</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item" href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </header>

        <!-- Page Content -->
        <main class="page-content backend-content">
            <div class="notification-container">
                <NotificationAlert Notification="@currentNotification" OnDismiss="ClearNotification" />
            </div>
            @Body
        </main>

        <!-- Footer -->
        <footer class="app-footer backend-footer">
            <div class="footer-content">
                <span>&copy; 2015-@DateTime.Now.Year EastSeat - Backend Administration Portal</span>
            </div>
        </footer>
    </div>
</div>

@code {
    private string currentUserName = "Backend User";
    private string currentUserRole = "Unknown";
    private Notification? currentNotification;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            currentUserName = authState.User.Identity.Name ?? "Backend User";
            
            // Determine user role
            if (authState.User.IsInRole("Developer"))
            {
                currentUserRole = "Developer";
            }
            else if (authState.User.IsInRole("Support"))
            {
                currentUserRole = "Support";
            }
            else
            {
                currentUserRole = "Backend";
            }
        }

        // Subscribe to notifications
        NotificationService.OnNotification += HandleNotification;
        NotificationService.OnClearNotification += ClearNotification;
    }

    private void HandleNotification(Notification notification)
    {
        currentNotification = notification;
        StateHasChanged();
    }

    private void ClearNotification()
    {
        currentNotification = null;
        StateHasChanged();
    }

    public void Dispose()
    {
        NotificationService.OnNotification -= HandleNotification;
        NotificationService.OnClearNotification -= ClearNotification;
    }
}

<style>
    .backend-header {
        background: linear-gradient(135deg, #2c3e50, #34495e);
        border-bottom: 2px solid #e74c3c;
    }

    .backend-indicator {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #ecf0f1;
        font-weight: 600;
    }

    .backend-indicator .fas {
        color: #e74c3c;
    }

    .backend-label {
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .user-role {
        font-size: 0.85rem;
        color: #bdc3c7;
        font-weight: normal;
    }

    .backend-content {
        background-color: #f8f9fa;
    }

    .backend-footer {
        background-color: #2c3e50;
        color: #ecf0f1;
        border-top: 2px solid #e74c3c;
    }
</style>